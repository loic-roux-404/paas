{
    "builders": [
        {
            "boot_command": [
                "<esc><wait>",
                "install <wait>",
                "preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/buster-preseed.cfg <wait>",
                "auto <wait>",
                "locale=en_US.UTF-8 <wait>",
                "netcfg/get_hostname={{ .Name }} <wait>",
                "netcfg/get_domain=vagrantup.com <wait>",
                "debconf/frontend=noninteractive <wait>",
                "console-setup/ask_detect=false <wait>",
                "kbd-chooser/method=us <wait>",
                "console-keymaps-at/keymap=us <wait>",
                "keyboard-configuration/xkb-keymap=us <wait>",
                "net.ifnames=0 <wait>",
                "<enter><wait>"
            ],
            "disk_size": "20280",
            "memory": "1024",
            "cpus": "2",
            "disk_interface": "virtio",
            "headless": true,
            "http_directory": "http",
            "iso_checksum": "{{user `iso_checksum`}}",
            "iso_url": "{{user `iso`}}",
            "type": "qemu",
            "accelerator": "hvf",
            "ssh_password": "vagrant",
            "ssh_username": "vagrant",
            "ssh_port": 22,
            "ssh_wait_timeout": "10000s",
            "shutdown_command": "echo 'vagrant' | sudo /sbin/halt -p",
            "output_directory": "{{ user `output_dir` }}",
            "vm_name": "{{user `vm_name`}}",
            "format": "raw"
        },
        {
            "boot_command": [
                "<up><wait><tab> text ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/ks.cfg PACKER_USER=vagrant PACKER_AUTHORIZED_KEY={{ .SSHPublicKey | urlquery }}<enter>"
            ],
            "headless": true,
            "checksum": "{{user `iso_checksum`}}",
            "type": "virtualbox-ovf",
            "format": "ovf",
            "source_path": "{{user `vm_name`}}.ovf",
            "guest_additions_mode": "disable",
            "virtualbox_version_file": "",
            "communicator": "none",
            "output_directory": "{{user `output_dir`}}",
            "shutdown_command": "",
            "shutdown_timeout": "1s",
            "vm_name": "{{user `vm_name`}}"
        }
    ],
    "provisioners": [
        {
            "type": "file",
            "source": "res",
            "destination": "/tmp/res",
            "only": [
                "qemu"
            ]
        },
        {
            "type": "shell",
            "pause_before": "5s",
            "execute_command": "echo 'vagrant'| {{.Vars}} sudo --preserve-env --stdin sh '{{.Path}}'",
            "environment_vars": [
                "VAGRANT_BUILDER_FS=/",
                "DEBUG='{{ user `PACKER_LOG` }}'"
            ],
            "scripts": [
                "../helpers/vagrant-setup",
                "scripts/customize.sh",
                "scripts/networking.sh"
            ],
            "only": [
                "qemu"
            ]
        },
        {
            "type": "ansible",
            "playbook_file": "{{ user `playbook_file` }}",
            "ansible_env_vars": [
                "ANSIBLE_CONFIG={{ user `playbook_dir` }}/ansible.cfg"
            ],
            "user": "vagrant",
            "inventory_directory": "{{ user `inventory_directory` }}",
            "groups": "env",
            "only": [
                "qemu"
            ]
        },
        {
            "type": "shell",
            "execute_command": "echo 'vagrant'| {{.Vars}} sudo --preserve-env --stdin sh '{{.Path}}'",
            "scripts": [
                "scripts/cleanup.sh",
                "scripts/minimize.sh"
            ],
            "only": [
                "qemu"
            ]
        }
    ],
    "post-processors": [
        [
            {
                "type": "shell-local",
                "environment_vars": [
                    "VM_NAME={{ user `vm_name` }}",
                    "OUTPUT={{ user `output_dir` }}",
                    "WORK_PATH=./"
                ],
                "script": "scripts/conversions.sh",
                "only": [
                    "qemu"
                ]
            },
            {
                "type": "shell-local",
                "inline": [
                    "make {{ user `vm_name` }}.libvirt.box"
                ],
                "only": [
                    "qemu"
                ]
            },
            {
                "type": "artifice",
                "files": [
                    "{{ user `exports_dir` }}/{{ user `vm_name` }}.libvirt.box"
                ],
                "only": [
                    "qemu"
                ]
            },
            {
                "output": "{{ user `exports_dir` }}/{{ user `vm_name` }}.{{ .Provider }}.box",
                "type": "vagrant",
                "keep_input_artifact": true,
                "only": [
                    "virtualbox-ovf"
                ]
            },
            {
                "type": "vagrant-cloud",
                "box_tag": "{{user `box_tag`}}",
                "access_token": "{{ user `cloud_token` }}",
                "version": "{{ user `box_version` }}"
            }
        ]
    ],
    "description": "Vanilla Debian Buster base box",
    "variables": {
        "box_tag": "",
        "vm_name": "buster",
        "box_version": "",
        "box_changelog": "* New major release",
        "cloud_token": "{{ env `VAGRANT_CLOUD_TOKEN` }}",
        "output_dir": "{{ user `vm_name` }}.build",
        "exports_dir": "{{ user `output_dir` }}/exports",
        "debian_version": "10.7",
        "iso": "https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/debian-{{ user `debian_version` }}.0-amd64-netinst.iso",
        "iso_checksum": "b317d87b0a3d5b568f48a92dcabfc4bc51fe58d9f67ca13b013f1b8329d1306d",
        "playbook": "playbook-vps",
        "sub_playbook": "env.yml",
        "playbook_dir": "../ansible/{{ user `playbook` }}",
        "playbook_file": "{{ user `playbook_dir` }}/{{user `sub_playbook` }}",
        "inventory": "local",
        "inventory_directory": "../ansible/{{ user `playbook` }}/inventories/{{ user `inventory` }}",
        "groups": "env"
    },
    "sensitive-variables": [
        "cloud_token",
        "iso_checksum"
    ]
}