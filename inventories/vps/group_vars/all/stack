
# ============
# nickjj.docker
# https://github.com/nickjj/ansible-docker
#=============
docker__channel: ["nightly"]
docker__state: "present"
docker__users: ["{{ user1.username }}"]

docker__default_daemon_json: |
  "log-driver": "journald"

docker__daemon_flags:
  - "-H unix://"

docker__daemon_environment:
  # TODO : configure
  # - "HTTP_PROXY=http://proxy.example.com:80"
  # - "HTTPS_PROXY=https://proxy.example.com:443"

docker__systemd_override: ""

# docker Crons
# `a` removes unused images (useful in production).
# `f` forces it to happen without prompting you to agree.
docker__cron_jobs_prune_flags: "af"

# Control the schedule of the docker system prune.
docker__cron_jobs_prune_schedule: ["0", "0", "*", "*", "0"]

docker__cron_jobs:
  - name: "Docker disk clean up"
    job: "docker system prune -{{ docker__cron_jobs_prune_flags }} > /dev/null 2>&1"
    schedule: "{{ docker__cron_jobs_prune_schedule }}"
    cron_file: "docker-disk-clean-up"
    user: "{{ (docker__users | first) | d('root') }}"
    state: "present"

# pip dependencies
docker__pip_dependencies:
  - "gcc"
  - "python-setuptools"
  - "python{{ '3' if ansible_python.version.major == 3 else '' }}-dev"
  - "python{{ '3' if ansible_python.version.major == 3 else '' }}-pip"
  - "virtualenv"

# Pip config
docker__pip_packages: []

docker__pip_docker_state: "present"
docker__pip_docker_compose_state: "absent"

#============
# role-stack
#============
dhcp_prepend: false #"domain-name-servers {{ ansible_lo['ipv4']['address'] }}"
keyboard_mac: true
# network

#=============
# role-dns
# https://github.com/mrlesmithjr/ansible-dnsmasq/blob/master/defaults/main.yml
#=============
dnsmasq_pri_domain_name: "{{ domain_test }}"
dnsmasq_config: true
enable_wildcard_domains: true

dnsmasq_bind_interfaces:
  - lo
  - eth0

dnsmasq_conditional_forwarders:
  - address: 127.0.0.1#4646
    domain: "nomad.{{ domain_test  }}"
  - address: 127.0.0.1#8200
    domain: "vault.{{ domain_test  }}"

dnsmasq_nameservers:
  - 208.67.222.222
  - 208.67.220.220

# force the use of dnsmasq local server
interface_dns: "{{ ansible_default_ipv4.address|default(ansible_all_ipv4_addresses[0]) }}"

# role stack add variables for dnsmasq
# TODO : check https://github.com/ansible/ansible/pull/68288 to be merged

#============
# role-nomad
# https://github.com/ansible-community/ansible-nomad
#============
nomad_version: "0.10.5"
nomad_group_name: "stack"
nomad_iface: eth1
nomad_network_interface: eth1
nomad_servers: []
nomad_retry_join: yes
# CONSTANTS
nomad_user: root
nomad_node_role: both
nomad_vault_enabled: false
nomad_vault_allow_unauthenticated: true # TODO Vault ACL
#nomad_vault_address: "vault.{{ domain }}"
nomad_bind_address: "0.0.0.0"
nomad_advertise_address: 127.0.0.1 #hostvars[inventory_hostname]['ansible_' + nomad_iface]['ipv4']['address'] 
nomad_use_consul: false
nomad_options: { 'driver.raw_exec.enable': '1' }
nomad_network_speed: 10
nomad_bootstrap_expect: 1
nomad_docker_enable: true
permanent: true
nomad_syslog_enable: true
nomad_ports_http: 4646
nomad_ports_rpc: 4647
nomad_ports_serf: 4648

#============
# arillso.logrotate
# https://github.com/arillso/ansible.logrotate/blob/master/defaults/main.yml
#============
logrotate_use_hourly_rotation: true
# TODO : configure vault / nomad / docker logs
logrotate_applications:
  - name: packages logs
    definitions:
      - logs:
          - /var/log/apt/term.log
          - /var/log/apt/history.log
          - /var/log/dpkg.log
        options:
          - rotate 2
          - monthly
          - missingok
          - notifempty
          - compress
