
# ============
# nickjj.docker
# https://github.com/nickjj/ansible-docker
#=============
docker__channel: ["nightly"]
docker__state: "present"
docker__users: ["{{ user1.username }}"]

docker__default_daemon_json: |
  "log-driver": "journald"

docker__daemon_flags:
  - "-H unix://"

docker__daemon_environment:
  #- "HTTP_PROXY=http://proxy.example.com:80"
  #- "HTTPS_PROXY=https://proxy.example.com:443"

docker__systemd_override: ""

# docker Crons
# `a` removes unused images (useful in production).
# `f` forces it to happen without prompting you to agree.
docker__cron_jobs_prune_flags: "af"

# Control the schedule of the docker system prune.
docker__cron_jobs_prune_schedule: ["0", "0", "*", "*", "0"]

docker__cron_jobs:
  - name: "Docker disk clean up"
    job: "docker system prune -{{ docker__cron_jobs_prune_flags }} > /dev/null 2>&1"
    schedule: "{{ docker__cron_jobs_prune_schedule }}"
    cron_file: "docker-disk-clean-up"
    user: "{{ (docker__users | first) | d('root') }}"
    state: "present"

# pip dependencies
docker__pip_dependencies:
  - "gcc"
  - "python-setuptools"
  - "python{{ '3' if ansible_python.version.major == 3 else '' }}-dev"
  - "python{{ '3' if ansible_python.version.major == 3 else '' }}-pip"
  - "virtualenv"

# Pip config
docker__pip_packages: []

docker__pip_docker_state: "present"
docker__pip_docker_compose_state: "absent"

#=============
# role-dnsmasq
# https://github.com/jriguera/ansible-role-dnsmasq # LATER REPLACE WITH THIS ONE
# https://github.com/Oefenweb/ansible-dnsmasq
#=============
dnsmasq_etc_default_domain_suffix: "{{ domain }}"

dnsmasq_dnsmasq_conf:
  - |
    port=53
    listen-address={{ ansible_lo['ipv4']['address'] }}
    bind-interfaces

dnsmasq_dnsmasq_d_files_present:
  '{{ domain }}':
    - address=/*.{{ domain }}/192.168.33.10
  cache:
    - |
      domain-needed
      bogus-priv
      no-hosts
      dns-forward-max=150
      cache-size=1000
      neg-ttl=3600
      resolv-file=/etc/resolv.dnsmasq
      no-poll

#============
# role-nomad
# https://github.com/ansible-community/ansible-nomad
#============
nomad_domain: "{{ domain }}"
nomad_iface: eth1
nomad_network_interface: eth1
nomad_group_name: nomad_instances
nomad_servers: []
nomad_retry_join: yes
# CONSTANTS
nomad_user: "{{ user1.username }}"
nomad_node_role: both
nomad_vault_enabled: false
nomad_vault_allow_unauthenticated: yes # TODO tmp
#nomad_vault_address: "http://active.vault.service.{{ domain }}:8200"
nomad_bind_address: "0.0.0.0"
nomad_use_consul: no
nomad_options: {  'driver.raw_exec.enable': '1' }
nomad_network_speed: 10
nomad_bootstrap_expect: 1
nomad_docker_enable: yes
permanent: yes
nomad_ports_http: 4646
nomad_ports_rpc: 4647
nomad_ports_serf: 4648

#============
# arillso.logrotate
# https://github.com/arillso/ansible.logrotate/blob/master/defaults/main.yml
#============
logrotate_use_hourly_rotation: true
# TODO : configure vault / nomad / docker logs
# More log files can be added that will log rotate.
# An example of multiple log rotate applications with available settings:
# logrotate_applications:
#   - name: name-your-log-rotate-application
#     definitions:
#       - logs:
#           - /var/log/apt/term.log
#           - /var/log/apt/history.log
#         options:
#           - rotate 12
#           - monthly
#           - missingok
#           - notifempty
#           - compress