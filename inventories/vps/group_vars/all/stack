
# ============
# nickjj.docker
# https://github.com/nickjj/ansible-docker
#=============
docker__channel: ["nightly"]
docker__state: "present"
docker__users: ["{{ user1.username }}"]

docker__default_daemon_json: |
  "log-driver": "journald"

docker__daemon_flags:
  - "-H unix://"

docker__daemon_environment:
  #- "HTTP_PROXY=http://proxy.example.com:80"
  #- "HTTPS_PROXY=https://proxy.example.com:443"

docker__systemd_override: ""

# docker Crons
# `a` removes unused images (useful in production).
# `f` forces it to happen without prompting you to agree.
docker__cron_jobs_prune_flags: "af"

# Control the schedule of the docker system prune.
docker__cron_jobs_prune_schedule: ["0", "0", "*", "*", "0"]

docker__cron_jobs:
  - name: "Docker disk clean up"
    job: "docker system prune -{{ docker__cron_jobs_prune_flags }} > /dev/null 2>&1"
    schedule: "{{ docker__cron_jobs_prune_schedule }}"
    cron_file: "docker-disk-clean-up"
    user: "{{ (docker__users | first) | d('root') }}"
    state: "present"

# pip dependencies
docker__pip_dependencies:
  - "gcc"
  - "python-setuptools"
  - "python{{ '3' if ansible_python.version.major == 3 else '' }}-dev"
  - "python{{ '3' if ansible_python.version.major == 3 else '' }}-pip"
  - "virtualenv"

# Pip config
docker__pip_packages: []

docker__pip_docker_state: "present"
docker__pip_docker_compose_state: "absent"

#============
# role-dnsmasq
# https://github.com/jriguera/ansible-role-dnsmasq
#============
dnsmasq_enabled_on_startup: True
# Manage resolvconf
dnsmasq_resolvconf: True

# Install from upstream repos or directly from operating system packages
dnsmasq_os_packages: True

# Global parameters, settings needed! otherwise are ignored!
dnsmasq_dhcp: True
dnsmasq_tftp: True

### resolv.conf
dnsmasq_host_domain: local #"{{ domain }}"
dnsmasq_host_search: local  #"{{ domain }}"
dnsmasq_host_resolvers: ['127.0.0.1']

# Set the facility to which dnsmasq will send syslog entries, this defaults to
# DAEMON, and to LOCAL0 when debug mode is in operation. If the facility given
# contains at least one '/' character, it is taken to be a filename, and dnsmasq
# logs to the given file, instead of syslog. If the facility is '-' then dnsmasq
# logs to stderr.
dnsmasq_conf_log: /var/log/dnsmasq.log

# Enable asynchronous logging and optionally set the limit on the number of
# lines which will be queued by dnsmasq when writing to the syslog is slow.
dnsmasq_conf_log_async: True
dnsmasq_conf_log_dns: True

# List of ip or interfaces to listen (empty list for all)
dnsmasq_conf_listen: ['eth0']

# On systems which support it, dnsmasq binds the wildcard address,
# even when it is listening on only some interfaces. It then discards
# requests that it shouldn't reply to. This has the advantage of
# working even when interfaces come and go and change address.
dnsmasq_conf_bind_interfaces: 'dynamic'

### DNS
# Accept DNS queries only from hosts whose address is on a local subnet,
# ie a subnet for which an interface exists on the server.
dnsmasq_conf_local_service: False

# Never forward plain names (without a dot or domain part)
dnsmasq_conf_domain_needed: True

# Enable code to detect DNS forwarding loops; ie the situation where a query
# sent to one of the upstream server eventually returns as a new query to the
# dnsmasq instance.
dnsmasq_conf_dns_loop_detect: True

# If you don't want dnsmasq to read /etc/hosts, uncomment the
# following line.
dnsmasq_conf_no_hosts: False

# Additional hosts file, /etc/hosts format (it is a list!)
#dnsmasq_conf_hosts:
# - ["127.0.0.1", "localhost"]
# - ["::1", "ip6-localhost", "ip6-loopback"]
# - ["fe00::0", "ip6-localnet"]
# - ["192.168.1.10", "foo.mydomain.org", "foo" ]
dnsmasq_conf_hosts: []

# This flag forces dnsmasq to try each query with each server strictly in
# the order they appear in /etc/resolv.conf
dnsmasq_conf_strict_order: False

# This flag forces dnsmasq to send all queries to all available servers.
# The reply from the server which answers first will be returned to the
# original requester.
dnsmasq_conf_all_servers: False

# If you want dnsmasq to read "/etc/resolv.conf" or any other file.
# Empty or not defined to disable reading resolfv.conf
dnsmasq_conf_resolv: /etc/resolv.conf

# Don't poll /etc/resolv.conf for changes.
dnsmasq_conf_no_poll: False

# if dnsmasq_conf_no_poll is False then /etc/resolv.conf is re-read or the
# upstream servers are set via DBus, clear the DNS cache.
dnsmasq_conf_clear_on_reload: True

dnsmasq_conf_servers: [ "8.8.8.8", "8.8.4.4" ]

# Log lots of extra information about DHCP transactions.
dnsmasq_conf_log_dhcp: True

# Set the domain for dnsmasq. this is optional, but if it is set, it
# does the following things.
# 1) Allows DHCP hosts to have fully qualified domain names, as long
#     as the domain part matches this setting.
# 2) Sets the "domain" DHCP option thereby potentially setting the
#    domain of all systems configured by DHCP
# 3) Provides the domain part for "expand-hosts"
# If the domain is given as "#" then the domain is read from the first
# "search" directive in /etc/resolv.conf
dnsmasq_conf_domain: '{{ domain }}'

#============
# role-nomad
# https://github.com/ansible-community/ansible-nomad
#============
nomad_domain: "{{ domain }}"
nomad_iface: eth1
nomad_network_interface: eth1
nomad_group_name: nomad_instances
nomad_servers: []
# CONSTANTS
nomad_user: "{{ user1.username }}"
nomad_node_role: both
nomad_vault_enabled: false
nomad_vault_allow_unauthenticated: yes # TODO tmp
#nomad_vault_address: "http://active.vault.service.{{ domain }}:8200"
nomad_bind_address: "0.0.0.0"
nomad_use_consul: no
nomad_options: {  'driver.raw_exec.enable': '1' }
nomad_network_speed: 10
nomad_bootstrap_expect: 1
nomad_docker_enable: yes
permanent: yes
nomad_ports_http: 4646
nomad_ports_rpc: 4647
nomad_ports_serf: 4648

#============
# arillso.logrotate
# https://github.com/arillso/ansible.logrotate/blob/master/defaults/main.yml
#============
logrotate_use_hourly_rotation: true
# TODO : configure vault / nomad / docker logs
# More log files can be added that will log rotate.
# An example of multiple log rotate applications with available settings:
# logrotate_applications:
#   - name: name-your-log-rotate-application
#     definitions:
#       - logs:
#           - /var/log/apt/term.log
#           - /var/log/apt/history.log
#         options:
#           - rotate 12
#           - monthly
#           - missingok
#           - notifempty
#           - compress