---
# Base variables
datacenter: dc1
stack_ip: "{{ ansible_default_ipv4.address|default(ansible_all_ipv4_addresses[0]) }}"
stack_eth: "{{ ansible_default_ipv4.interface|default(ansible_interfaces[0]) }}"
stack_domain: "{{ ansible_host }}"

# ============
# nickjj.docker
# https://github.com/nickjj/ansible-docker
#=============
docker__channel: ["nightly"]
docker__state: "present"
docker__users: ["{{ user1.username | d('root') }}"]
docker__default_daemon_json: |
  "log-driver": "journald"
docker__daemon_flags:
  - "-H unix://"
docker__daemon_environment: []
  # - "HTTP_PROXY=http://proxy.example.com:80"
  # - "HTTPS_PROXY=https://proxy.example.com:443"
docker__systemd_override: ""
# docker Crons
# `a` removes unused images (useful in production).
# `f` forces it to happen without prompting you to agree.
docker__cron_jobs_prune_flags: "af"
# Control the schedule of the docker system prune.
docker__cron_jobs_prune_schedule: ["0", "0", "*", "*", "0"]
docker__cron_jobs:
  - name: "Docker disk clean up"
    job: "docker system prune -{{ docker__cron_jobs_prune_flags }} > /dev/null 2>&1"
    schedule: "{{ docker__cron_jobs_prune_schedule }}"
    cron_file: "docker-disk-clean-up"
    user: "{{ (docker__users | first) | d('root') }}"
    state: "present"
# pip dependencies
docker__pip_dependencies:
  - "gcc"
  - "python{{ '3' if ansible_python.version.major == 3 else '' }}-dev"
  - "python{{ '3' if ansible_python.version.major == 3 else '' }}-pip"
# Pip config
docker__pip_packages: [virtualenv, setuptools, docker]
docker__pip_docker_state: "present"
docker__pip_docker_compose_state: "present"

# =============
# role-dns
# https://github.com/mrlesmithjr/ansible-dnsmasq/blob/master/defaults/main.yml
# =============
dnsmasq_pri_domain_name: "{{ stack_domain }}"
dnsmasq_config: True

# Consul reverse dns lookup
other_dnsmasq_options:
  - "rev-server=0.0.0.0/8,127.0.0.1#8600"
  - "rev-server=10.0.0.0/8,127.0.0.1#8600"
  - "rev-server=127.0.0.1/8,127.0.0.1#8600"
  - "rev-server=192.168.0.0/16,127.0.0.1#8600"
