# ===========
# role-upgrade
# https://github.com/Oefenweb/ansible-apt
#=========================
apt_manage_sources_list: True
apt_debian_contrib_nonfree_enable: False
apt_backports_enable: True

apt_install:
  - sudo
  - acl
  - wget
  - zip
  - unzip
  - gnupg2
  - vim
  - dnsutils
  - python3
  - python3-pip
  - man
  - apache2-utils
  - dnsutils
  - rsync

apt_remove:
  - apache*
  - "php*"
  - "python2*"
  - cmdtest

# ===========
# role-users
# https://github.com/weareinteractive/ansible-users.git
#=========================
monitoring_user: "analyst"
backup_user: "superman"
app_user: "{{ user1 }}"
security_user: "bodyguard"

users:
  - username: "{{ app_user.username }}"
    password: "{{ app_user.password }}"
    group: "{{ app_user.username }}"
    uid: 1001
    append: yes
    home_mode: "0750"
    home_create: yes
    home: "/home/{{ app_user.username }}"
    authorized_keys:
      - "https://github.com/{{ app_user.username }}.keys"
    ssh_key_generate: yes
    github_user_token: "{{ app_user.github_token }}"
    update_password: always

  - username: "{{ backup_user }}"
    password: "{{ user2.password }}"
    uid: 1002
    home_create: no

  - username: "{{ monitoring_user }}"
    password: "{{ app_user.password }}"
    uid: 1003
    home_create: no

  - username: "{{ security_user }}"
    password: "{{ user2.password }}"
    uid: 1667
    home_create: no

users_home_files:
  - "files/.inputrc"
  - "files/.vimrc"

users_home: /home
users_home_create: yes
users_shell: /bin/zsh
users_ssh_key_type: rsa
users_ssh_key_bits: 2048
users_authorized_keys_exclusive: yes

users_remove: []

# ===========
# role-sudo
# https://github.com/weareinteractive/ansible-sudo
#=========================
# sudo_defaults:
#  - defaults: env_reset
#  - name: app_user
#    defaults: requiretty
# sudo_users:
#  - name: '%group1'
#  - name: 'bar'
#    nopasswd: yes
#  - name: '%group2'
#    commands: '/bin/ls'
#  - name: '%group3'
#    commands:
#      - /bin/ls
#      - /bin/df
#  - name: '%group4'
#    hosts: 127.0.0.1

# package name (version)
sudo_package: sudo
# list of username or %groupname
sudo_users:
  - name: "{{ app_user.username }}"
    nopasswd: True
    # commands: ""
  - name: "{{ monitoring_user}}"
  - name: "{{ backup_user }}"
  - name: "{{ security_user }}"
# list of username or %groupname and their defaults
sudo_defaults: []
# default sudoers file
sudo_sudoers_file: ansible
# path of the sudoers.d directory
sudo_sudoers_d_path: /etc/sudoers.d
# delete other files in `sudo_sudoers_d_path`
purge_other_sudoers_files: no

# role-basics
# System trick
ssh_acl_ip:
  - ippattern: "*"
    user: "{{ app_user.username }}"
  - ippattern: "{{ app_user.ip1|d('*') }}"
    user: "root"
  - ippattern: "*"
    user: "git"

#============
# role-security
#============
security_ssh_port: 22
security_ssh_password_authentication: "yes"
security_ssh_permit_root_login: "no"
security_ssh_usedns: "no"
security_ssh_permit_empty_password: "no"
security_ssh_challenge_response_auth: "no"
security_ssh_gss_api_authentication: "no"
security_ssh_x11_forwarding: "no"

security_ssh_restart_handler_state: restarted

# module to ignore from apt auto upgrade
security_autoupdate_blacklist: []
security_autoupdate_mail_to: "{{ app_user.email }}"
security_autoupdate_mail_on_error: true
# module with IP black list
security_fail2ban_enabled: true

#==================
# role-firewall
#==================
firewall_allowed_tcp_ports:
  - "22"    # ssh
  - "25"    # smtp
  - "80"    # reverse proxy
  - "53"    # dns
  - "443"   # ssl
  - "2376"  # docker machine
  - "2377"  # for docker swarm manager nodes
  - "7946"  # swarm discovery

firewall_allowed_udp_ports:
  - "80"   # reverse proxy
  - "7946" # swarm discovery
  - "4789" # swarm ingress controller

firewall_forwarded_udp_ports: []

firewall_log_dropped_packets: false

firewall_additional_rules:
# iptables rules from http://digitalocean.com/community/tutorials/iptables-essentials-common-firewall-rules-and-commands
# general rules
  - "iptables -A INPUT -i lo -j ACCEPT"
  - "iptables -A OUTPUT -o lo -j ACCEPT"
  - "iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT"
  - "iptables -A OUTPUT -m conntrack --ctstate ESTABLISHED -j ACCEPT"
# ssh
  - "iptables -A INPUT -p tcp -s {{ app_user.ip2 }} --dport 22 \
    -m conntrack --ctstate NEW,ESTABLISHED,RELATED -j ACCEPT"
  - "iptables -A INPUT -m state --state NEW,ESTABLISHED,RELATED -p tcp \
    --dport 22 -j DROP"
  - "iptables -A INPUT -p tcp -s {{ app_user.ip1 }} --dport 22 \
   -m conntrack --ctstate NEW,ESTABLISHED,RELATED -j ACCEPT"
# Github
  - "iptables -A INPUT -p tcp -s 140.82.118.3 --dport 22 \
   -m conntrack --ctstate NEW,ESTABLISHED,RELATED -j ACCEPT"
# Docker rules
  - iptables -N DOCKER
  - iptables -N DOCKER-ISOLATION-STAGE-1
  - iptables -N DOCKER-ISOLATION-STAGE-2
  - iptables -N DOCKER-USER
  - iptables -A DOCKER -d 172.17.0.2/32 ! -i docker0 -o docker0 -p tcp -m tcp --dport 8000 -j ACCEPT
  - iptables -A DOCKER -d 172.17.0.2/32 ! -i docker0 -o docker0 -p udp -m udp --dport 8000 -j ACCEPT
  - iptables -A DOCKER-ISOLATION-STAGE-1 -i docker0 ! -o docker0 -j DOCKER-ISOLATION-STAGE-2
  - iptables -A DOCKER-ISOLATION-STAGE-1 -j RETURN
  - iptables -A DOCKER-ISOLATION-STAGE-2 -o docker0 -j DROP
  - iptables -A DOCKER-ISOLATION-STAGE-2 -j RETURN
  - iptables -A DOCKER-USER -j RETURN
